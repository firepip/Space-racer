<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
angle=180
debugg=0
randomize()

//3d setup
d3d_start()
d3d_set_culling(true)
d3d_set_perspective(true)
d3d_set_lighting(true)
//d3d_light_define_point(7,0,room_width/2,room_height/2,150000,c_white);
d3d_light_define_direction(7,0,0,1,c_ltgray)
d3d_light_enable(7,true);
//d3d_light_define_point(6,0,0,150000,150000,c_white);
//d3d_light_enable(6,true);
if false
{
//old random generator
tiles = 16

//Performance variables
precision=round(80/tiles)
//Precision=Number of planes per piece.
renderdistance=30
//Renderdistance=Number of pieces on 1 row in the z axis
//Total amount of triangles=(renderdistance*8*precision*2)


//Setup initial walls
//Create wall piece model. 1/8 of the wall
piece_model=d3d_model_create()

var modelwidth=200
var col=c_orange
//Precision=how round the wall will appear

//Define wall pieces
for (i=0;i&lt;tiles;i++)
  {
  wpieces[i]=ds_list_create()
  for (j=0;j&lt;renderdistance;j++)
    {
    if random(10)&lt;6
      ds_list_add(wpieces[i],true)
    else
      ds_list_add(wpieces[i],false)
    }
  }
for (i=0;i&lt;renderdistance;i++)
  {
  wlayers[i]=d3d_model_create()
  }
//Create layers
var x1
var x2
var y1
var y2
var count
for (i=0;i&lt;renderdistance;i++)
  {
  //Create layer
  for (j=0;j&lt;tiles;j++)
    {
    count=0
    //Single piece
    for (k=-360/tiles/2+j/tiles*360;k&lt;360/tiles/2+j/tiles*360;k+=360/tiles/precision)
      {
      if ds_list_find_value(wpieces[j],i)
        {
        //Get x,y coordinates for part of piece
        var x1=sin(degtorad(k))*modelwidth
        var x2=sin(degtorad(k+360/tiles/precision))*modelwidth
        var y1=cos(degtorad(k))*modelwidth
        var y2=cos(degtorad(k+360/tiles/precision))*modelwidth
        //Draw primitves
        d3d_model_primitive_begin(wlayers[i], pr_trianglelist );
        
        //Top Venstre
        d3d_model_vertex_normal_texture(wlayers[i],  x2,y2,modelwidth/2, 0,1,0,(1-(count+1)/precision)/4,0.5);
        //Top Højre
        d3d_model_vertex_normal_texture(wlayers[i],  x1,y1,modelwidth/2, 0,1,0,(1-(count)/precision)/4,0.5);
        //Bot Venstre
        d3d_model_vertex_normal_texture(wlayers[i],  x2,y2,-modelwidth/2, 0,1,0,(1-(count+1)/precision)/4,0.75);
        
        //Bot Venstre
        d3d_model_vertex_normal_texture(wlayers[i],  x2,y2,-modelwidth/2, 0,1,0,(1-(1+count)/precision)/4,0.75);
        //Bot Højre
        d3d_model_vertex_normal_texture(wlayers[i],  x1,y1,-modelwidth/2, 0,1,0,(1-(count)/precision)/4,0.75);
        //Top Højre
        d3d_model_vertex_normal_texture(wlayers[i],  x1,y1,modelwidth/2, 0,1,0,(1-(count)/precision)/4,0.5);
        
        d3d_model_primitive_end(wlayers[i]);
        }
      count++  
      }
    
    }
  }

}
else
{
init_tiles()
load_level("savefilemars.ini")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Planet
var size
var prec=64
size=0.383
modelmerc=d3d_model_create()
d3d_model_ellipsoid(modelmerc,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)

size=0.950
modelvenus=d3d_model_create()
d3d_model_ellipsoid(modelvenus,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)


size=1
modelearth=d3d_model_create()
d3d_model_ellipsoid(modelearth,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec*2)
modelatmos=d3d_model_create()
d3d_model_ellipsoid(modelatmos,-101*size,-101*size,-101*size,101*size,101*size,101*size,1,1,prec*2)
size=0.273
modelmoon=d3d_model_create()
d3d_model_ellipsoid(modelmoon,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)

size=0.532
modelmars=d3d_model_create()
d3d_model_ellipsoid(modelmars,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)


size=10.97
modeljupiter=d3d_model_create()
d3d_model_ellipsoid(modeljupiter,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)
modelio=d3d_model_create()
size=0.287
d3d_model_ellipsoid(modelio,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,20)
modeleuropa=d3d_model_create()
size=0.245
d3d_model_ellipsoid(modeleuropa,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,20)
modelganymede=d3d_model_create()
size=0.413
d3d_model_ellipsoid(modelganymede,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,20)
modelcallisto=d3d_model_create()
size=0.378
d3d_model_ellipsoid(modelcallisto,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,20)



size=9.14
modelsaturn=d3d_model_create()
d3d_model_ellipsoid(modelsaturn,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)
model_saturn_ring()
size=3.98
modeluranus=d3d_model_create()
d3d_model_ellipsoid(modeluranus,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)
model_uranus_ring()
size=3.86
modelneptune=d3d_model_create()
d3d_model_ellipsoid(modelneptune,-100*size,-100*size,-100*size,100*size,100*size,100*size,1,1,prec)

rot=0
z=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var size;
var realratio;
var times=5;
size=0.383*times
realratio=1/640
at=0
atx=room_width/2
aty=room_height/2
atz=0
px=room_width/2+50*size
py=room_height/2-50*size
pz=57*1000000*realratio/63.71
pathpx[0]=room_width/2
pathpy[0]=room_height/2
pathpz[0]=0
pathpr[0]=0
pathpx[1]=room_width/2+50*size
pathpy[1]=room_height/2-50*size
pathpz[1]=57*1000000*realratio/63.71
pathpr[1]=100*0.383
size=0.950*times
pathpx[2]=room_width/2
pathpy[2]=room_height/2+50*size
pathpz[2]=108*1000000*realratio/63.71
pathpr[2]=100*0.950
size=1*times

pathpx[3]=room_width/2-50*size
pathpy[3]=room_height/2+25*size
pathpz[3]=150*1000000*realratio/63.71
pathpr[3]=100*1

size=0.532*times
pathpx[4]=room_width/2+50*size
pathpy[4]=room_height/2+50*size
pathpz[4]=228*1000000*realratio/63.71
pathpr[4]=100*0.532
times=6
size=10.97*times
pathpx[5]=room_width/2-50*size
pathpy[5]=room_height/2-25*size
pathpz[5]=779*1000000*realratio/63.71
pathpr[5]=100*10.97
size=9.14*times
pathpx[6]=room_width/2+30*size
pathpy[6]=room_height/2+50*size
pathpz[6]=1430*1000000*realratio/63.71
pathpr[6]=100*9.14
times=12
size=3.98*times
pathpx[7]=room_width/2-50*size
pathpy[7]=room_height/2-50*size
pathpz[7]=2880*1000000*realratio/63.71
pathpr[7]=100*3.98
size=3.86*times
pathpx[8]=room_width/2+10*size
pathpy[8]=room_height/2+50*size
pathpz[8]=4500*1000000*realratio/63.71
pathpr[8]=100*3.86
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blendercreate
//kasse=spaceship1model()
kasse=d3d_model_create()
d3d_model_load(kasse,"spaceshipdefault.d3d")
dt=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scanlines uniform
mheight = shader_get_uniform(shader_scanlines, "f_mHeight");
f_ats = shader_get_uniform(shader_scanlines, "f_at");
f_ats2 = shader_get_uniform(shader_arrow, "f_at");
mheight2 = shader_get_uniform(shader_arrow, "f_mHeight");
t=-7
traise=false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///arrow jump
arrowpos=-2
arrowup=true
arrowspeed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rot++
dt++
if traise
{
t+=0.3
}
move_to_next_handle()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///arrow jump
//fuck this part
/*
if arrowup
  arrowpos+=8/(room_speed/2)
else
  arrowpos-=8/(room_speed/2)
if arrowpos&gt;=6
  {
  arrowup=false
  arrowpos=6
  }
if arrowpos&lt;=-2
  {
  arrowup=true
  arrowpos=-2
  }
*/
arrowspeed+=0.2
arrowpos+=arrowspeed
if arrowpos&gt;6
  {
  arrowpos=6
  arrowspeed=-arrowspeed
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_to_next()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//d3d_set_projection_perspective(0,0,room_width,room_height,angle)
var realratio=1/640
d3d_set_projection_ext(atx,aty,atz,px,py,pz,0,-1,0,45,room_width/room_height,1,4500*1000000*realratio/63.71+z)
//3d lightning
var intensity=0
d3d_light_define_ambient(make_colour_rgb(intensity,intensity,intensity))
d3d_set_hidden(true)
d3d_set_culling(false)
//draw wall
//Create wall pieces

//model,x,y,z,angle,tex
var size
var times=3
//earth radius 100 pixels
//earth distance from sun 150 million km
//earth radius 6371 km
//1 px=63.71 km
//earth real distance from sun = 2,354418 millioner px
//earth distance from sun = 3750
//realratio=0.0016
size=0.383*times
d3d_draw_planet(modelmerc,pathpx[1],pathpy[1],pathpz[1],0,mercurymap)
draw_set_halign(fa_center)
d3d_transform_set_identity()
d3d_transform_set_rotation_z(180)
d3d_transform_set_rotation_y(180)

d3d_transform_set_identity()

size=0.950*times
d3d_draw_planet(modelvenus,pathpx[2],pathpy[2],pathpz[2],177,planet_Bog_2275)

d3d_transform_set_identity()
d3d_transform_set_rotation_z(180)
d3d_transform_set_rotation_y(180)
d3d_transform_add_translation(pathpx[2],pathpy[2]-pathpr[2]*2,pathpz[2])


size=1*times
d3d_draw_planet(modelearth,pathpx[3],pathpy[3],pathpz[3],23.4,earthmap)
d3d_draw_planet(modelearth,pathpx[3],pathpy[3],pathpz[3],23.4,earthcloudsmap)
d3d_transform_set_identity()
if os_type=os_windows
{
draw_set_color(c_aqua);
draw_set_alpha(0.20);
/*shader_set(shader_earth);
var tex2 = background_get_texture(earth_water_areas);
texture_set_stage(shader_get_sampler_index(shader_earth,"second_texture"),tex2);
*/d3d_draw_atmos(modelatmos,pathpx[3],pathpy[3],pathpz[3],23.4)
//shader_reset()
//d3d_draw_ellipsoid(pathpx[3]-101,pathpy[3]-101,pathpz[3]-101,pathpx[3]+101,pathpy[3]+101,pathpz[3]+101,-1,1,1,150);
draw_set_alpha(1);

}
draw_set_color(c_white);

d3d_draw_moon()

size=0.532*times
d3d_draw_planet(modelmars,pathpx[4],pathpy[4],pathpz[4],25.19,marsmap)
size=10.97*times
d3d_draw_planet(modeljupiter,pathpx[5],pathpy[5],pathpz[5],3.13,jupitermap)
d3d_draw_jupiter_moon(modelio,0,3,2000,iomap)
d3d_draw_jupiter_moon(modeleuropa,190,45,2300,europamap)
d3d_draw_jupiter_moon(modelganymede,55,-26,2600,ganymedemap)
d3d_draw_jupiter_moon(modelcallisto,287,15,3000,callistomap)
size=9.14*times
d3d_draw_planet(modelsaturn,pathpx[6],pathpy[6],pathpz[6],26.73,saturnmap)
d3d_light_define_ambient(c_ltgray)
tex=background_get_texture(saturn_ring)
d3d_transform_set_identity();
d3d_transform_add_rotation_x(270)
d3d_transform_add_rotation_y(-rot)
d3d_transform_add_rotation_z(26.73)
d3d_transform_add_translation(pathpx[6],pathpy[6],pathpz[6]);
d3d_model_draw(saturn_ring_moded,0,0,0,tex)
d3d_transform_set_identity();
d3d_light_define_ambient(c_black)
size=3.98*times
d3d_draw_planet(modeluranus,pathpx[7],pathpy[7],pathpz[7],97.77,uranusmap)
d3d_light_define_ambient(c_gray)
tex=background_get_texture(uranus_ring)
d3d_transform_set_identity();
d3d_transform_add_rotation_x(270)
d3d_transform_add_rotation_y(-rot)
d3d_transform_add_rotation_z(97.77)
d3d_transform_add_translation(pathpx[7],pathpy[7],pathpz[7]);
d3d_model_draw(uranus_ring_model,0,0,0,tex)
d3d_transform_set_identity();
d3d_light_define_ambient(c_black)
size=3.86*times
d3d_draw_planet(modelneptune,pathpx[8],pathpy[8],pathpz[8],28.32,neptunemap)


//Draw texts
draw_set_font(planet_font)
draw_set_colour(c_orange_2)
d3d_transform_set_identity()
d3d_set_lighting(false)
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*3.86*0.7)
text_rotation(8)
d3d_transform_add_translation(pathpx[8],pathpy[8]-pathpr[8]*2,pathpz[8])
if at=8
    {
    draw_text_transformed(0,0,"Neptune",3.86*0.7,3.86*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*3.86*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*3.86*0.7+(arrowpos*3.86*0.7),3.86*0.7,3.86*0.7,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*3.98*1.2)
text_rotation(7)
d3d_transform_add_translation(pathpx[7],pathpy[7]-pathpr[7]*3.6,pathpz[7])
if at=7
    {
    draw_text_transformed(0,0,"Uranus",3.98*1.2,3.98*1.2,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*3.98*1.2)
    draw_sprite_ext(spr_arrowdown,-1,0,60*3.98*1.2+(arrowpos*3.98*1.2),3.98*1.2,3.98*1.2,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*9.14*0.7)
text_rotation(6)
d3d_transform_add_translation(pathpx[6],pathpy[6]-pathpr[6]*2,pathpz[6])
if at=6
    {
    draw_text_transformed(0,0,"Saturn",9.14*0.7,9.14*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*9.14*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*9.14*0.7+(arrowpos*9.14*0.7),9.14*0.7,9.14*0.7,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*10.97*0.7)
text_rotation(5)
d3d_transform_add_translation(pathpx[5],pathpy[5]-pathpr[5]*2,pathpz[5])
if at=5
    {
    draw_text_transformed(0,0,"Jupiter",10.97*0.7,10.97*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*10.97*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*10.97*0.7+(arrowpos*10.97*0.7),10.97*0.7,10.97*0.7,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*0.532*0.7)
text_rotation(4)
d3d_transform_add_translation(pathpx[4],pathpy[4]-pathpr[4]*2,pathpz[4])
if at=4
    {
    draw_text_transformed(0,0,"Mars",0.532*0.7,0.532*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*0.532*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*0.532*0.7+(arrowpos*0.532*0.7),0.532*0.7,0.532*0.7,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*0.7)
text_rotation(3)
d3d_transform_add_translation(pathpx[3],pathpy[3]-pathpr[3]*2,pathpz[3])
if at = 3
    {
    draw_text_transformed(0,0,"Earth",1*0.7,1*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*0.7+(arrowpos*0.7),0.7,0.7,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*0.950*0.7)
text_rotation(2)
d3d_transform_add_translation(pathpx[2],pathpy[2]-pathpr[2]*2,pathpz[2])
if at=2
    {
    draw_text_transformed(0,0,"Venus",0.950*0.7,0.950*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*0.950*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*0.950*0.7+(arrowpos*0.950*0.7),0.950*0.7,0.950*0.7,0,c_white,1)
    shader_reset()
    }
d3d_transform_set_identity()
shader_set(shader_scanlines)
shader_set_uniform_f(f_ats,t)
shader_set_uniform_f(mheight,72*0.383*0.7)
text_rotation(1)
d3d_transform_add_translation(pathpx[1],pathpy[1]-pathpr[1]*2,pathpz[1])
if at =1
    {
    draw_text_transformed(0,0,"Mercury",0.383*0.7,0.383*0.7,0)
    shader_set(shader_arrow)
    shader_set_uniform_f(f_ats,t/8)
    shader_set_uniform_f(mheight,72*0.383*0.7)
    draw_sprite_ext(spr_arrowdown,-1,0,60*0.383*0.7+(arrowpos*0.383*0.7),0.383*0.7,0.383*0.7,0,c_white,1)
    shader_reset()
    }
shader_reset()
d3d_transform_set_identity()
d3d_set_lighting(true)
draw_set_colour(c_white)
d3d_transform_set_identity()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blender
//d3d_light_define_ambient(c_white)
d3d_set_shading(true)
d3d_set_culling(true)
d3d_light_define_ambient(c_dkgray)
tex=background_get_texture(tex_default_ship)
d3d_transform_set_identity()
d3d_transform_add_scaling(1,1,1)
d3d_transform_add_rotation_y(0)
d3d_transform_add_rotation_x(-90)
d3d_transform_add_rotation_z(-0)
d3d_transform_add_translation(room_width/2,room_height/2+180,1000)
d3d_model_draw(kasse,0,0,0,tex)
d3d_transform_set_identity()
//d3d_light_define_ambient(c_black)
d3d_set_culling(false)
d3d_light_define_ambient(c_black)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_to_prev()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_to_next()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
